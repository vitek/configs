### Key bindings
#
# Basics:
#
bindsym --to-code {
    # Start a terminal
    $mod+Return exec $term

    # # Start a editor
    $mod+q exec sway-emacs

    # kill focused window
    $mod+Shift+c kill

    # Start your launcher
    $mod+r exec launcher-menu

    # Reload the configuration file
    $mod+Shift+r reload

    # Connect headset
    $mod+slash exec headsetctl connect

    # Connect headset
    $mod+question exec headsetctl disconnect
}

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal


# Exit sway (logs you out of your Wayland session)
#bindsym --to-code $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'

#
# Moving around:
#

focus_wrapping no

# Move your focus around
bindsym --to-code {
    $mod+$left focus left
    $mod+$down focus down
    $mod+$up focus up
    $mod+$right focus right
    # # Or use $mod+[up|down|left|right]
    # $mod+Left focus left
    # $mod+Down focus down
    # $mod+Up focus up
    # $mod+Right focus right
}

# Move the focused window with the same, but add Shift
bindsym --to-code {
    $mod+Shift+$left move left
    $mod+Shift+$down move down
    $mod+Shift+$up move up
    $mod+Shift+$right move right
    # # Ditto, with arrow keys
    # $mod+Shift+Left move left
    # $mod+Shift+Down move down
    # $mod+Shift+Up move up
    # $mod+Shift+Right move right
}

#
# Workspaces:
#
bindsym --to-code {
    # Switch to workspace
    $mod+1 workspace number 1
    $mod+2 workspace number 2
    $mod+3 workspace number 3
    $mod+4 workspace number 4
    $mod+5 workspace number 5
    $mod+6 workspace number 6
    $mod+7 workspace number 7
    $mod+8 workspace number 8
    $mod+9 workspace number 9
    $mod+0 workspace number 10
    # Move focused container to workspace
    $mod+Shift+1 move container to workspace number 1
    $mod+Shift+2 move container to workspace number 2
    $mod+Shift+3 move container to workspace number 3
    $mod+Shift+4 move container to workspace number 4
    $mod+Shift+5 move container to workspace number 5
    $mod+Shift+6 move container to workspace number 6
    $mod+Shift+7 move container to workspace number 7
    $mod+Shift+8 move container to workspace number 8
    $mod+Shift+9 move container to workspace number 9
    $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
}

#
# Move workspace to output:
#
set {
    $output_prefix Mod1+Mod4+Shift
}
bindsym --to-code {
    $output_prefix+Left move workspace to output left
    $output_prefix+Right move workspace to output right
    $output_prefix+Up move workspace to output up
    $output_prefix+Down move workspace to output down
}

#
# Layout stuff:
#
bindsym --to-code {
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    $mod+b splith
    $mod+v splitv

    # Switch the current container between different layout styles
    $mod+s layout stacking
    $mod+w layout tabbed
    $mod+e layout toggle split

    # Make the current focus fullscreen
    $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    $mod+space focus mode_toggle

    # Move focus to the parent container
    $mod+a focus parent
}
#
# Scratchpad:
#
bindsym --to-code {
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    $mod+minus scratchpad show
}

#
# Resizing containers:
#
# mode "resize" {
#     # left will shrink the containers width
#     # right will grow the containers width
#     # up will shrink the containers height
#     # down will grow the containers height
#     bindsym --to-code $left resize shrink width 10px
#     bindsym --to-code $down resize grow height 10px
#     bindsym --to-code $up resize shrink height 10px
#     bindsym --to-code $right resize grow width 10px

#     # Ditto, with arrow keys
#     bindsym --to-code Left resize shrink width 10px
#     bindsym --to-code Down resize grow height 10px
#     bindsym --to-code Up resize shrink height 10px
#     bindsym --to-code Right resize grow width 10px

#     # Return to default mode
#     bindsym --to-code Return mode "default"
#     bindsym --to-code Escape mode "default"
# }
# bindsym --to-code $mod+r mode "resize"

set {
    $resize_step 10px
    $resize_step2 20px
}

bindsym --to-code {
    $mod+Control+$left resize shrink width $resize_step
    $mod+Control+$down resize grow height $resize_step
    $mod+Control+$up resize shrink height $resize_step
    $mod+Control+$right resize grow width $resize_step

    $mod+Control+Left resize shrink width $resize_step
    $mod+Control+Down resize grow height $resize_step
    $mod+Control+Up resize shrink height $resize_step
    $mod+Control+Right resize grow width $resize_step

    $mod+Control+Shift+$left resize shrink width $resize_step2
    $mod+Control+Shift+$down resize grow height $resize_step2
    $mod+Control+Shift+$up resize shrink height $resize_step2
    $mod+Control+Shift+$right resize grow width $resize_step2

    $mod+Control+Shift+Left resize shrink width $resize_step2
    $mod+Control+Shift+Down resize grow height $resize_step2
    $mod+Control+Shift+Up resize shrink height $resize_step2
    $mod+Control+Shift+Right resize grow width $resize_step2
}

bindsym --to-code {
    $mod+Left workspace prev_on_output
    $mod+Right workspace next_on_output
    Mod1+Control+Left workspace prev_on_output
    Mod1+Control+Right workspace next_on_output
}

bindsym --whole-window {
    # wheel
    $mod+button4 workspace prev_on_output
    $mod+button5 workspace next_on_output

    # middle/side
    $mod+button2 workspace prev_on_output
    $mod+button8 workspace next_on_output
}

bindsym --to-code {
    $mod+BracketLeft opacity minus 0.1
    $mod+BracketRight opacity plus 0.1
}
