# -*- mode: i3wm-config -*-
# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

# autostart
exec {
     systemctl --user import-environment \
         SWAYSOCK                        \
         WAYLAND_DISPLAY

     # Fix D-Bus activation
     dbus-update-activation-environment --systemd --all

     # GNOME Keyring and SSH agent
     gnome-keyring-daemon

     nm-applet --indicator

     # per-window layout
     swaykbdd
}

# Theme setup
set {
    # Interfaces
    $gnome-interface org.gnome.desktop.interface
    $gnome-sound org.gnome.desktop.sound

    $gtk_font 'Hack Nerd Font 16'
    $icon_theme Acid-green-folder
}

exec_always {
     gsettings set $gnome-interface cursor-theme        'DMZ-White'
     gsettings set $gnome-interface cursor-size         24
#     gsettings set $gnome-interface document-font-name  $gtk_font
#     gsettings set $gnome-interface font-name           $gtk_font
     gsettings set $gnome-interface gtk-theme           'Adwaita-dark'
#     gsettings set $gnome-interface gtk-color-theme     'Gruvbox-glass'
#     gsettings set $gnome-interface icon-theme          '$icon_theme'
#     gsettings set $gnome-interface monospace-font-name $gtk_font
#     gsettings set $gnome-interface text-scaling-factor 1.0
#     gsettings set $gnome-sound     theme-name          'deepin'
}

### Variables
#
set {
    # Logo key. Use Mod1 for Alt.
    $mod Mod4
    # Home row direction keys, like vim
    $left h
    $down j
    $up k
    $right l
    # Your preferred terminal emulator
    $term gnome-terminal
    # Your preferred application launcher
    # Note: pass the final command to swaymsg so that the resulting window can be opened
    # on the original workspace that the command was run on.
    $menu dmenu_path | dmenu | xargs swaymsg exec --
    $bg_image /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png
}

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg $bg_image fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

set {
    $lock_bg $bg_image
    $lock_cmd "sway-lock.sh -f -c 000000 -i $lock_bg"
}

bindsym --to-code Mod1+Control+l exec $lock_cmd

exec swayidle -w \
         lock         $lock_cmd \
         before-sleep $lock_cmd \
         timeout 300  $lock_cmd  \
         timeout 150  'swaymsg "output * dpms off"' \
         resume       'swaymsg "output * dpms on"'


### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.


# input
## laptop options
#input "1:1:AT_Translated_Set_2_keyboard" xkb_options "caps:ctrl_modifier"
input type:touchpad {
    accel_profile flat
    click_method button_areas
    click_method clickfinger
    drag enabled
    dwt enabled
    #events disabled_on_external_mouse
    events enabled
    middle_emulation enabled
    pointer_accel 0.8
    scroll_method two_finger
    tap enabled
    natural_scroll enabled
}
## laptop options

input "*" {
    xkb_layout "us,ru"
    xkb_options "caps:ctrl_modifier"
    #xkb_options "grp:alt_space_toggle"
}

bindsym --to-code --locked {
    #Mod1+space exec swaymsg 'input "*" xkb_switch_layout next'
    Mod1+space exec sway-switch-layout
}

### Brightness
exec_always brightnessctl.sh restore
bindsym --to-code --locked {
    XF86MonBrightnessUp exec brightnessctl.sh up
    XF86MonBrightnessDown exec brightnessctl.sh down
}

### Sound
bindsym --to-code {
    XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
    XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
    XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
}

### Key bindings
#
# Basics:
#
bindsym --to-code {
    # Start a terminal
    $mod+Return exec $term

    # # Start a editor
    # $mod+e exec emacs

    # kill focused window
    $mod+Shift+c kill

    # Start your launcher
    $mod+r exec $menu

    # Reload the configuration file
    $mod+Shift+r reload
}

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal


# Exit sway (logs you out of your Wayland session)
#bindsym --to-code $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'

#
# Moving around:
#

focus_wrapping no

# Move your focus around
bindsym --to-code {
    $mod+$left focus left
    $mod+$down focus down
    $mod+$up focus up
    $mod+$right focus right
    # # Or use $mod+[up|down|left|right]
    # $mod+Left focus left
    # $mod+Down focus down
    # $mod+Up focus up
    # $mod+Right focus right
}

# Move the focused window with the same, but add Shift
bindsym --to-code {
    $mod+Shift+$left move left
    $mod+Shift+$down move down
    $mod+Shift+$up move up
    $mod+Shift+$right move right
    # # Ditto, with arrow keys
    # $mod+Shift+Left move left
    # $mod+Shift+Down move down
    # $mod+Shift+Up move up
    # $mod+Shift+Right move right
}

#
# Workspaces:
#
bindsym --to-code {
    # Switch to workspace
    $mod+1 workspace number 1
    $mod+2 workspace number 2
    $mod+3 workspace number 3
    $mod+4 workspace number 4
    $mod+5 workspace number 5
    $mod+6 workspace number 6
    $mod+7 workspace number 7
    $mod+8 workspace number 8
    $mod+9 workspace number 9
    $mod+0 workspace number 10
    # Move focused container to workspace
    $mod+Shift+1 move container to workspace number 1
    $mod+Shift+2 move container to workspace number 2
    $mod+Shift+3 move container to workspace number 3
    $mod+Shift+4 move container to workspace number 4
    $mod+Shift+5 move container to workspace number 5
    $mod+Shift+6 move container to workspace number 6
    $mod+Shift+7 move container to workspace number 7
    $mod+Shift+8 move container to workspace number 8
    $mod+Shift+9 move container to workspace number 9
    $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
}

#
# Layout stuff:
#
bindsym --to-code {
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    $mod+b splith
    $mod+v splitv

    # Switch the current container between different layout styles
    $mod+s layout stacking
    $mod+w layout tabbed
    $mod+e layout toggle split

    # Make the current focus fullscreen
    $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    $mod+space focus mode_toggle

    # Move focus to the parent container
    $mod+a focus parent
}
#
# Scratchpad:
#
bindsym --to-code {
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    $mod+minus scratchpad show
}

#
# Resizing containers:
#
# mode "resize" {
#     # left will shrink the containers width
#     # right will grow the containers width
#     # up will shrink the containers height
#     # down will grow the containers height
#     bindsym --to-code $left resize shrink width 10px
#     bindsym --to-code $down resize grow height 10px
#     bindsym --to-code $up resize shrink height 10px
#     bindsym --to-code $right resize grow width 10px

#     # Ditto, with arrow keys
#     bindsym --to-code Left resize shrink width 10px
#     bindsym --to-code Down resize grow height 10px
#     bindsym --to-code Up resize shrink height 10px
#     bindsym --to-code Right resize grow width 10px

#     # Return to default mode
#     bindsym --to-code Return mode "default"
#     bindsym --to-code Escape mode "default"
# }
# bindsym --to-code $mod+r mode "resize"

set {
    $resize_step 10px
    $resize_step2 20px
}

bindsym --to-code {
    $mod+Control+$left resize shrink width $resize_step
    $mod+Control+$down resize grow height $resize_step
    $mod+Control+$up resize shrink height $resize_step
    $mod+Control+$right resize grow width $resize_step

    $mod+Control+Left resize shrink width $resize_step
    $mod+Control+Down resize grow height $resize_step
    $mod+Control+Up resize shrink height $resize_step
    $mod+Control+Right resize grow width $resize_step

    $mod+Control+Shift+$left resize shrink width $resize_step2
    $mod+Control+Shift+$down resize grow height $resize_step2
    $mod+Control+Shift+$up resize shrink height $resize_step2
    $mod+Control+Shift+$right resize grow width $resize_step2

    $mod+Control+Shift+Left resize shrink width $resize_step2
    $mod+Control+Shift+Down resize grow height $resize_step2
    $mod+Control+Shift+Up resize shrink height $resize_step2
    $mod+Control+Shift+Right resize grow width $resize_step2
}

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
# bar {
#     position top

#     # When the status_command prints a new line to stdout, swaybar updates.
#     # The default just shows the current date and time.
#     status_command while date +'%Y-%m-%d %I:%M:%S %p'; do sleep 1; done

#     colors {
#         statusline #ffffff
#         background #323232
#         inactive_workspace #32323200 #32323200 #5c5c5c
#     }
#     tray_output *
# }
bar {
    position top
    swaybar_command waybar
}

bindsym --to-code {
    $mod+Left workspace prev_on_output
    $mod+Right workspace next_on_output
}

# Take screenshots
bindsym --to-code {
    $mod+Backslash exec grimshot copy area
}

bindsym --to-code {
    $mod+Escape exec sway-quake toggle
    $mod+Grave exec sway-quake toggle
}

# hide title bar
default_border pixel 1
default_floating_border pixel 1
hide_edge_borders both

# hidpi
output HDMI-A-2 scale 2

for_window [title="__sway_quake__"] move scratchpad

include /etc/sway/config.d/*
